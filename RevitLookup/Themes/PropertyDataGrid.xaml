<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:RevitLookupWpf.Controls"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:methodType="clr-namespace:RevitLookupWpf.PropertySys.BaseProperty.MethodType"
    xmlns:propertySys="clr-namespace:RevitLookupWpf.PropertySys.BaseProperty.ValueType"
    xmlns:propertySys1="clr-namespace:RevitLookupWpf.PropertySys"
    xmlns:referenceType="clr-namespace:RevitLookupWpf.PropertySys.BaseProperty.ReferenceType">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/RevitLookupWpf;component/Themes/Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="controls:PropertyDataGrid">
        <Setter Property="HeadersVisibility" Value="None" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="ColumnHeaderHeight" Value="30" />
        <Setter Property="VerticalGridLinesBrush" Value="Gray" />
        <Setter Property="HorizontalGridLinesBrush" Value="Gray" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <controls:PropertyDataGridValueTemplateSelector x:Key="PropertyDataGridValueTemplateSelector">
        <!--  Int  -->
        <controls:PropertyDataGridValueTemplateSelector.IntDataTemplate>
            <DataTemplate DataType="{x:Type propertySys:IntProperty}">
                <TextBox IsReadOnly="{Binding IsReadOnly}" Text="{Binding Value}" />
            </DataTemplate>
        </controls:PropertyDataGridValueTemplateSelector.IntDataTemplate>
        <!--  Double  -->
        <controls:PropertyDataGridValueTemplateSelector.DoubleDataTemplate>
            <DataTemplate DataType="{x:Type propertySys:DoubleProperty}">
                <TextBox IsReadOnly="{Binding IsReadOnly}" Text="{Binding Value}" />
            </DataTemplate>
        </controls:PropertyDataGridValueTemplateSelector.DoubleDataTemplate>
        <!--  String  -->
        <controls:PropertyDataGridValueTemplateSelector.StringDataTemplate>
            <DataTemplate DataType="{x:Type referenceType:StringProperty}">
                <TextBox IsReadOnly="{Binding IsReadOnly}" Text="{Binding Value}" />
            </DataTemplate>
        </controls:PropertyDataGridValueTemplateSelector.StringDataTemplate>
        <!--  Bool  -->
        <controls:PropertyDataGridValueTemplateSelector.BoolDataTemplate>
            <DataTemplate DataType="{x:Type propertySys:BooleanProperty}">
                <CheckBox IsChecked="{Binding Value}" IsEnabled="{Binding IsReadOnly}" />
            </DataTemplate>
        </controls:PropertyDataGridValueTemplateSelector.BoolDataTemplate>
        <!--  Method  -->
        <controls:PropertyDataGridValueTemplateSelector.MethodDataTemplate>
            <DataTemplate DataType="{x:Type methodType:MethodProperty}">
                <TextBlock Text="{Binding MethodValue}" ToolTip="{Binding ToolTip}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding SelectedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CanExecute}" Value="True">
                                    <Setter Property="FontWeight" Value="Black" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SolvedValue}" Value="True">
                                    <Setter Property="Foreground" Value="Blue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </DataTemplate>
        </controls:PropertyDataGridValueTemplateSelector.MethodDataTemplate>
        <!--  Exception  -->
        <controls:PropertyDataGridValueTemplateSelector.ExceptionDataTemplate>
            <DataTemplate DataType="{x:Type propertySys1:ExceptionProperty}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Image Height="15" Source="{StaticResource color_errorDrawingImage}" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Foreground="Red"
                        Text="{Binding Msg}" />
                </Grid>
            </DataTemplate>
        </controls:PropertyDataGridValueTemplateSelector.ExceptionDataTemplate>
        <!--  DeafultObject  -->
        <controls:PropertyDataGridValueTemplateSelector.DefaultObjectDataTemplate>
            <DataTemplate DataType="{x:Type referenceType:DefaultObjectProperty}">
                <TextBlock FontWeight="Black" Text="{Binding ValueType}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding SelectedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
            </DataTemplate>
        </controls:PropertyDataGridValueTemplateSelector.DefaultObjectDataTemplate>
        <!--  NullObject  -->
        <controls:PropertyDataGridValueTemplateSelector.NullObjectDataTemplate>
            <DataTemplate DataType="{x:Type referenceType:NullObjectProperty}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Image Height="15" Source="{StaticResource Empty_setDrawingImage}" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Text="Null" />
                </Grid>
            </DataTemplate>
        </controls:PropertyDataGridValueTemplateSelector.NullObjectDataTemplate>
        <!--Parameters-->
        <controls:PropertyDataGridValueTemplateSelector.ParameterDataTemplate>
            <DataTemplate>
                <controls:SplitDropDownItem Text="{Binding ValueType}"
                                            ToolTip="{Binding ToolTip}"
                                            ApplyCommand="{Binding ApplyCommand}">
                    <controls:SplitDropDownItem.Style>
                        <Style TargetType="controls:SplitDropDownItem">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CanExecute}" Value="True">
                                    <Setter Property="FontWeight" Value="Black"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SolvedValue}" Value="True">
                                    <Setter Property="Foreground" Value="Blue"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding HasError}" Value="True">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controls:SplitDropDownItem.Style>
                </controls:SplitDropDownItem>
            </DataTemplate>
        </controls:PropertyDataGridValueTemplateSelector.ParameterDataTemplate>
    </controls:PropertyDataGridValueTemplateSelector>
</ResourceDictionary>
